#!/bin/bash
DIR=$(dirname $(realpath $0))
NODE_CONF_TMPL=$DIR/http.d/massbit/massbitroute/gateway.conf.tmpl
NODE_CONF=$DIR/http.d/massbit/massbitroute/gateway.conf
VAR=$DIR/vars
MBRNETWORK=$(cat $VAR/MBRNETWORK)
if [ -z "$MBRNETWORK" ]; then MBRNETWORK=mainnet; fi
MBRAPI=https://dapi.massbit.io
#MBRAPI=http://admin.massbitroute.local

if [ ! -d "$VAR" ]; then
	mkdir $VAR
fi

cd $DIR

echo $DIR >$VAR/SITE_ROOT
mkdir -p $DIR/tmp $DIR/logs $DIR/data

gw_init() {
	rm /tmp/*.sock
	val=$(cat vars/SITE_ROOT | sed 's/\//\\\//g')
	sed "s/_SITE_ROOT_/$val/g" nginx.conf.tmpl >nginx.conf

	if [ ! -x "/usr/local/openresty" ]; then
		ln -sf $DIR/bin/openresty /usr/local/openresty
	fi
	sed "s/_SITE_ROOT_/$val/g" mbr_gateway.conf.tmpl >/etc/supervisor/conf.d/mbr_gateway.conf

	supervisorctl update
}

gw_apply() {
	gw_init
	machine_id=$(cat $VAR/NODE_ID)
	mbrnodekey=$(cat $VAR/NODE_KEY)

	cp $NODE_CONF_TMPL $NODE_CONF
	ls vars | while read key; do
		val=$(cat vars/$key | sed 's/\//\\\//g')
		sed "s/_${key}_/$val/g" -i $NODE_CONF
	done

	if [ ! -f "$DIR/etc/htpasswd" ]; then
		htpasswd -cb etc/htpasswd $machine_id $mbrnodekey
	else
		htpasswd -b etc/htpasswd $machine_id $mbrnodekey
	fi

	$DIR/scripts/run _reload
}
gw_getkey() {
	machine_id=$(cat /var/lib/dbus/machine-id)
	mbrnodekey=$(curl -s -H "mbrnodeid: $machine_id" "$MBRAPI/api/v1/mbrnodekey")
	echo $machine_id >$VAR/NODE_ID
	echo $mbrnodekey >$VAR/NODE_KEY
	echo "NODE_ID: $machine_id"
	echo "NODE_KEY: $mbrnodekey"
}
gw_show() {
	ls vars | while read key; do
		val=$(cat vars/$key | sed 's/\//\\\//g')
		echo "$key: $val"
	done
}
gw_register() {
	#	gw_nodekey
	machine_id=$(cat $VAR/NODE_ID)
	mbrnodekey=$(cat $VAR/NODE_KEY)
	NETWORK=$(cat $VAR/NETWORK)
	BLOCKCHAIN=$(cat $VAR/BLOCKCHAIN)
	curl -s \
		-X POST \
		-H "Content-Type: application/json" \
		-H "mbrnodekey: $mbrnodekey" \
		-d "{\"blockchain\":\"$BLOCKCHAIN\", \"network\":\"$NETWORK\", \"mbrnodeid\":\"$machine_id\"}" \
		"$MBRAPI/api/v1?action=gateway.register"
	gw_apply
}
gw_unregister() {
	#	gw_nodekey
	machine_id=$(cat $VAR/NODE_ID)
	mbrnodekey=$(cat $VAR/NODE_KEY)
	NETWORK=$(cat $VAR/NETWORK)
	BLOCKCHAIN=$(cat $VAR/BLOCKCHAIN)
	curl -s \
		-X POST \
		-H "Content-Type: application/json" \
		-H "mbrnodekey: $mbrnodekey" \
		-d "{\"blockchain\":\"$BLOCKCHAIN\", \"network\":\"$NETWORK\", \"mbrnodeid\":\"$machine_id\"}" \
		"$MBRAPI/api/v1?action=gateway.unregister"
	#	gw_apply
}
gw_set() {
	key="$1"
	val="$2"
	echo "$val" >"$VAR/$key"
	#node_apply

}
gw_get() {
	key="$1"
	cat "$VAR/$key"
	#node_apply

}
gw_keys() {
	ls "$VAR"
}

gw() {
	cmd=$1
	shift
	gw_$cmd $@
}
$@
