#!/bin/bash
SITE_ROOT=$(realpath $(dirname $(realpath $0))/..)
export HOME=/tmp
cd $SITE_ROOT
VAR=$SITE_ROOT/vars

if [ ! -d "$VAR" ]; then
	mkdir $VAR
fi
DOMAIN=$(cat $VAR/DOMAIN)
#source $SITE_ROOT/.env
diff="diff -s"
mkdir -p http.d
git="git -C $SITE_ROOT"
type="gateway"
service_dir=/massbit/massbitroute/app/src/sites/services
mbr="$service_dir/$type/mbr"
script_run="$service_dir/$type/scripts/run"
cmd="$service_dir/$type/cmd_server"
nginx="$cmd nginx"
debug_log=$SITE_ROOT/logs/debug.log
nginx_error=$SITE_ROOT/logs/nginx_error.log
user=massbit
pass=c671e4ea06280e7a3f6f9aea6e8155fcde9bc703
log_dir=/massbit/massbitroute/app/src/sites/services/$type/logs
_git_config() {
	$git config --global user.name "Vu Tran"
	$git config --global user.email "baysao@gmail.com"
}
_send_log() {
	id=$(cat $SITE_ROOT/vars/ID)
	# curl -X POST https://monitor.mbr.massbitroute.com/upload/gateway/${id}_monitor_client.log --data-binary @$log_dir/monitor_client.log
	curl -X POST https://monitor.mbr.massbitroute.com/upload/gateway/$id --data-binary @$debug_log
}
_debug() {

	truncate -s 0 $log_dir/*.log
	truncate -s 0 $log_dir/nginx/*.log
	id=$(cat $SITE_ROOT/vars/ID)

	#$log_dir/stat-* $log_dir/nginx-* $log_dir/monitor_client*
	for f in $log_dir/stat--* /etc/supervisor/conf.d/*--* /etc/supervisor/conf.d/mbr_*.conf; do
		rm $f
	done

	echo "$(date)" >$debug_log

	echo "--OS" >>$debug_log
	cat /etc/lsb-release >>$debug_log
	mid=$(cat /etc/machine-id)
	echo "machine_id:$mid" >>$debug_log
	_sc=$SITE_ROOT/scripts/debug/${mid}.sh
	if [ -f "$_sc" ]; then
		bash $_sc >>$debug_log
	fi

	echo "--Git" >>$debug_log
	for d in $SITE_ROOT $SITE_ROOT/etc/mkagent /massbit/massbitroute/app/gbc /etc/letsencrypt; do
		echo "git dir:$d" >>$debug_log
		git -C $d remote -v >>$debug_log
		git -C $d pull >>$debug_log
	done
	echo "----Vars" >>$debug_log
	find $SITE_ROOT/vars -type f | while read f; do echo $f $(cat $f) >>$debug_log; done
	echo "----ENV" >>$debug_log
	cat $SITE_ROOT/.env >>$debug_log
	echo >>$debug_log

	curl -I https://dapi.massbit.io >>$debug_log
	echo "----Firewall" >>$debug_log
	iptables -nL >>$debug_log
	echo "----DNS resolve" >>$debug_log
	cat /etc/resolv.conf >>$debug_log
	echo "----Services" >>$debug_log
	supervisorctl status >>$debug_log
	$cmd status >>$debug_log
	echo "----Supervisor" >>$debug_log
	ls /etc/supervisor/conf.d/ >>$debug_log
	if [ ! -f "/usr/bin/netstat" ]; then apt-get install -y net-tools; fi
	echo "--Network interface" >>$debug_log
	ifconfig >>$debug_log
	echo "--Netstat" >>$debug_log
	netstat -tunalp | grep -i listen >>$debug_log
	echo "--Verify" >>$debug_log
	#$mbr $type register >>$debug_log
	$mbr $type nodeverify >>$debug_log

	echo "--Processs" >>$debug_log
	pstree >>$debug_log
	ps -efx >>$debug_log
	lsof -p $(cat $SITE_ROOT/tmp/nginx.pid) >>$debug_log

	echo "----Nginx" >>$debug_log
	$cmd nginx -t 2>&1 | tee -a $debug_log
	# $cmd nginx -s reload 2>&1 | tee -a $debug_log
	$cmd nginx -T | tee -a $debug_log
	>$nginx_error

	_send_log

}

_reload() {
	_debug
	# $SITE_ROOT/etc/mkagent/agents/push.sh _kill
	$cmd _update
	# $cmd update
	# $mbr $type register
	# $nginx -s reload
}

_git_pull() {
	service=$1
	_dir=$2
	_url=$3
	git clone $_url $_dir
	git -C $_dir remote set-url origin $_url
	git -C $_dir pull origin master

}
_install() {
	mkdir -p $service_dir $SITE_ROOT/etc $SITE_ROOT/logs

	# user=massbit
	# pass=41d919e74993945a97972d147c4d01847e8bc1b6

	service=gbc
	_dir=/massbit/massbitroute/app/$service
	_url=https://github.com/massbitprotocol/massbitroute_gbc
	_git_pull $service $_dir $_url

	service=ssl
	_url=http://$user:$pass@$git.${DOMAIN}/massbitroute/${service}.git
	_dir=/etc/letsencrypt
	_git_pull $service $_dir $_url

	service=mkagent
	_url=https://github.com/massbitprotocol/massbitroute_mkagent
	_dir=$SITE_ROOT/etc/$service
	_git_pull $service $_dir $_url

	# service=$type
	# _url=http://$:$pass@git.massbitroute.com/massbitroute/${service}.git
	# _dir=$service_dir/$service
	# _git_pull $service $_dir $_url

	ln -sf /massbit/massbitroute/app/gbc /massbit/massbitroute/app/src/gbc
	ln -sf /massbit/massbitroute/app/gbc/bin/openresty /usr/local/openresty
	apt-get update
	apt-get install -y git apache2-utils supervisor jq python-is-python2 libssl-dev libmaxminddb-dev
	mkdir -p /etc/supervisor/conf.d
	cp supervisor.conf /etc/supervisor/conf.d/${type}.conf
	systemctl enable supervisor
	systemctl start supervisor
	supervisorctl update
}

loop() {
	while true; do
		$0 $@
		sleep 3
	done
}

# _deprecate() {

# 	n=$(ls http.d/*.conf | wc -l)
# 	if [ $n -ne 2 ]; then
# 		echo rm -rf http.d/*
# 	fi
# }
_update_src() {
	cd gbc
	git pull origin master
	cd $SITE_ROOT
}

_update_network() {
	blockchain=$1
	network=$2
	id=$3
	blnet=${blockchain}-${network}
	_reload=0

	conf=http.d/gw-${blnet}.conf
	if [ ! -f "$conf" ]; then touch ${conf}.orig; fi

	curl -sSfL $MBR_API/deploy/${type}conf/${blnet}.conf -o ${conf}.new >/dev/null
	if [ $? -ne 0 ]; then
		touch ${conf}.new
	fi

	$diff ${conf}.orig ${conf}.new >/dev/null
	if [ $? -ne 0 ]; then
		cp ${conf}.new ${conf}.orig
		_reload=1
	fi

	conf=http.d/dapi-${blnet}.conf
	if [ ! -f ${conf}.orig ]; then touch ${conf}.orig; fi

	curl -sSfL $MBR_API/deploy/dapiconf/${blnet}.conf -o ${conf}.new >/dev/null
	if [ $? -ne 0 ]; then
		touch ${conf}.new
	fi

	$diff ${conf}.orig ${conf}.new >/dev/null
	if [ $? -ne 0 ]; then
		cp ${conf}.new ${conf}.orig
		sed "s/__GATEWAY_ID__/$id/g" ${conf}.orig >$conf
		_reload=1
	fi

	conf=http.d/provider-${blnet}.conf
	if [ ! -f ${conf}.orig ]; then touch ${conf}.orig; fi

	curl -sSfL $MBR_API/deploy/provider/${blnet}.conf -o ${conf}.new >/dev/null
	if [ $? -ne 0 ]; then
		touch ${conf}.new
	fi

	$diff ${conf}.orig ${conf}.new >/dev/null
	if [ $? -ne 0 ]; then
		cp ${conf}.new ${conf}.orig
		cp ${conf}.orig ${conf}
		_reload=1
	fi

	backup=$(awk '/listen unix/{sub(/listen\s+unix/,"server unix");sub(/;/," backup ;");print}' $conf)

	if [ -n "$backup" ]; then
		grep server http.d/gw-${blnet}.conf.orig >/dev/null
		if [ $? -ne 0 ]; then
			backup=$(awk '/listen unix/{sub(/listen\s+unix/,"server unix");sub(/;/,";");print}' $conf)
			cat >http.d/gw-${blnet}.conf.orig.upstream <<EOF
upstream ${blnet}.node.mbr.massbitroute.com {
}
EOF
		else
			cp http.d/gw-${blnet}.conf.orig http.d/gw-${blnet}.conf.orig.upstream
		fi
		sed "/upstream/ a $backup" http.d/gw-${blnet}.conf.orig.upstream >http.d/gw-${blnet}.conf
		cat http.d/gw-${blnet}.conf
	fi
	# sed "s/__GATEWAY_ID__/$id/g" etc/gateway.conf >http.d/gateway.conf0
	return $_reload
}

_monitor() {
	# $mbr $type register
	mkdir -p http.d
	# rm -f http.d/dapi*
	is_reload=0
	id=$(cat $SITE_ROOT/vars/ID)
	blockchain=$(cat $SITE_ROOT/vars/BLOCKCHAIN)
	network=$(cat $SITE_ROOT/vars/NETWORK)

	if [ ! -d "$SITE_ROOT/vars" ]; then mkdir -p $SITE_ROOT/vars; fi
	echo $type >$SITE_ROOT/vars/TYPE

	for d in /massbit/massbitroute/app/gbc \
		$SITE_ROOT \
		$SITE_ROOT/etc/mkagent \
		/etc/letsencrypt; do
		git -C $d pull origin master | grep -i "updating"
		if [ $? -eq 0 ]; then
			is_reload=1
		fi
	done

	# if [ "$blockchain" = "all" ]; then
	# 	for blockchain in avax bsc dot eth ftm matic near sol; do
	# 		_update_network $blockchain $network $id
	# 		st=$?
	# 		echo $st
	# 		if [ $st -eq 1 ]; then
	# 			is_reload=1
	# 		fi

	# 	done
	# else
	_update_network $blockchain $network $id
	st=$?
	echo $st
	if [ $st -eq 1 ]; then
		is_reload=1
	fi

	# fi

	sed "s/__GATEWAY_ID__/$id/g" etc/gateway0.conf >http.d/gateway.conf0
	sed -i "s/__BLOCKCHAIN__/$blockchain/g" http.d/gateway.conf0
	sed -i "s/__NETWORK__/$network/g" http.d/gateway.conf0

	sed "s/__GATEWAY_ID__/$id/g" etc/gateway9.conf >http.d/gateway.conf9
	sed -i "s/__BLOCKCHAIN__/$blockchain/g" http.d/gateway.conf9
	sed -i "s/__NETWORK__/$network/g" http.d/gateway.conf9

	if [ $is_reload -ne 0 ]; then
		$0 _reload
	fi
	#	$0 _reload
	$cmd start all

}

_run() {
	# pkill -9 prometheus grafana-server
	rm -rf $SITE_ROOT/tmp/*
	sleep 3
	$SITE_ROOT/start_server
}

$@
