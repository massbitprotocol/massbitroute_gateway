#!/bin/bash
SITE_ROOT=$(realpath $(dirname $(realpath $0))/..)
export HOME=/tmp
cd $SITE_ROOT
mkdir -p http.d
source $SITE_ROOT/.env
git="git -C $SITE_ROOT"
type="gateway"
mbr="/massbit/massbitroute/app/src/sites/services/$type/mbr"
script_run="/massbit/massbitroute/app/src/sites/services/$type/scripts/run"
cmd="/massbit/massbitroute/app/src/sites/services/$type/cmd_server"
nginx="$cmd nginx"
mkdir -p http.d
_git_config() {
	$git config --global user.name "Vu Tran"
	$git config --global user.email "baysao@gmail.com"
}
_reload() {
	$cmd _update
	# $mbr $type register
	# $nginx -s reload
}

loop() {
	while true; do
		$0 $@
		sleep 10
	done
}
_deprecate() {

	n=$(ls http.d/*.conf | wc -l)
	if [ $n -ne 2 ]; then
		echo rm -rf http.d/*
	fi
}
_update_src() {
	cd gbc
	git pull origin master
	cd $SITE_ROOT
}

_update_network() {
	blockchain=$1
	network=$2
	blnet=${blockchain}-${network}

	conf=http.d/gw-${blnet}.conf
	curl -sSfL $MBR_API/deploy/${type}conf/${blnet}.conf -o ${conf}.new >/dev/null
	if [ $? -ne 0 ]; then touch ${conf}.new; fi
	if [ ! -f "$conf" ]; then
		touch $conf
	fi

	diff -s $conf ${conf}.new >/dev/null
	if [ $? -ne 0 ]; then
		cp ${conf}.new $conf
		is_reload=1
	fi

	conf=http.d/dapi-${blnet}.conf
	curl -sSfL $MBR_API/deploy/dapiconf/${blnet}.conf -o ${conf}.new >/dev/null
	if [ $? -ne 0 ]; then touch ${conf}.new; fi
	if [ ! -f ${conf}.orig ]; then touch ${conf}.orig; fi
	diff -s ${conf}.orig ${conf}.new >/dev/null
	if [ $? -ne 0 ]; then
		cp ${conf}.new ${conf}.orig
		is_reload=1
	fi

	conf=http.d/provider-${blnet}.conf
	curl -sSfL $MBR_API/deploy/provider/${blnet}.conf -o ${conf}.new >/dev/null
	if [ $? -ne 0 ]; then touch ${conf}.new; fi
	if [ ! -f ${conf}.orig ]; then touch ${conf}.orig; fi
	diff -s ${conf}.orig ${conf}.new >/dev/null
	if [ $? -ne 0 ]; then
		cp ${conf}.new $conf
		is_reload=1
	fi

	backup=$(awk '/listen unix/{sub(/listen\s+unix/,"server unix");sub(/;/," backup ;");print}' $conf)

	if [ -n "$backup" ]; then
		n=$(wc -c http.d/gw-${blnet}.conf | cut -d' ' -f1)
		if [ $n -eq 0 ]; then
			backup=$(awk '/listen unix/{sub(/listen\s+unix/,"server unix");sub(/;/,";");print}' $conf)
			cat >http.d/gw-${blnet}.conf <<EOF
upstream ${blnet}.node.mbr.massbitroute.com {
}
EOF
		fi
		sed "/upstream/ a $backup" -i http.d/gw-${blnet}.conf
	fi
	return $is_reload
}
_monitor() {
	$cmd _update
	# $mbr $type register
	mkdir -p http.d
	# rm http.d/*
	$0 _deprecate
	$0 _update_src
	is_reload=0
	id=$(cat $SITE_ROOT/vars/ID)
	blockchain=$(cat $SITE_ROOT/vars/BLOCKCHAIN)
	network=$(cat $SITE_ROOT/vars/NETWORK)

	$git pull | grep -i "updating"
	if [ $? -eq 0 ]; then
		is_reload=1
	fi

	git -C /etc/letsencrypt pull origin master | grep -i "updating"
	if [ $? -eq 0 ]; then
		is_reload=1
	fi

	if [ "$blockchain" = "all" ]; then
		for blockchain in avax bsc dot eth ftm matic near sol; do
			_update_network $blockchain $network
			if [ $? -eq 1 ]; then
				is_reload=1
			fi

		done
	else
		_update_network $blockchain $network
		if [ $? -eq 1 ]; then
			is_reload=1
		fi

	fi

	# rm http.d/gateway.conf http.d/0gateway.conf

	sed "s/__GATEWAY_ID__/$id/g" etc/gateway.conf >http.d/gateway.conf0

	if [ $is_reload -ne 0 ]; then
		$0 _reload
	fi
	# $mbr $type ping
}

_run() {
	$SITE_ROOT/start_server
}

$@
