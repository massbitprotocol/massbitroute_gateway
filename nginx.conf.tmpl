load_module _SITE_ROOT_/bin/openresty/nginx/modules/ngx_http_link_func_module.so;
load_module _SITE_ROOT_/bin/openresty/nginx/modules/ngx_http_geoip2_module.so;
load_module _SITE_ROOT_/bin/openresty/nginx/modules/ngx_stream_geoip2_module.so;
load_module _SITE_ROOT_/bin/openresty/nginx/modules/ngx_http_vhost_traffic_status_module.so;
load_module _SITE_ROOT_/bin/openresty/nginx/modules/ngx_http_stream_server_traffic_status_module.so;
load_module _SITE_ROOT_/bin/openresty/nginx/modules/ngx_stream_server_traffic_status_module.so;
daemon off;
user root;
worker_processes auto;
error_log _SITE_ROOT_/logs/nginx-error.log;
pid _SITE_ROOT_/tmp/nginx.pid;
events {
    worker_connections 1024;
}
env BIND_ADDRESS;
#
http {
    map_hash_max_size 128;
    map_hash_bucket_size 128;
    server_names_hash_bucket_size 128;
    include _SITE_ROOT_/bin/openresty/nginx/conf/mime.types;
    access_log _SITE_ROOT_/logs/nginx-access.log;
    # tmp
    client_body_temp_path _SITE_ROOT_/tmp/client_body_temp;
    fastcgi_temp_path _SITE_ROOT_/tmp/fastcgi_temp;
    proxy_temp_path _SITE_ROOT_/tmp/proxy_temp;
    scgi_temp_path _SITE_ROOT_/tmp/scgi_temp;
    uwsgi_temp_path _SITE_ROOT_/tmp/uwsgi_temp;
    resolver 8.8.8.8 ipv6=off;
    variables_hash_bucket_size 512;
    proxy_cache_path _SITE_ROOT_/cache levels=1:2 keys_zone=cache:8m max_size=1000m;
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    log_format main_json_body escape=json $request_body;
    # log_format main_json escape=json '{'
    #   '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
    #   '"connection": "$connection", ' # connection serial number
    #   '"connection_requests": "$connection_requests", ' # number of requests made in connection
    #   '"pid": "$pid", ' # process pid
    #   '"request_id": "$request_id", ' # the unique request id
    #   '"request_length": "$request_length", ' # request length (including headers and body)
    #   '"remote_addr": "$remote_addr", ' # client IP
    #   '"remote_user": "$remote_user", ' # client HTTP username
    #   '"remote_port": "$remote_port", ' # client port
    #   '"time_local": "$time_local", '
    #   '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
    #   '"request": "$request", ' # full path no arguments if the request
    #   '"request_uri": "$request_uri", ' # full path and arguments if the request
    #   '"args": "$args", ' # args
    #   '"status": "$status", ' # response status code
    #   '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
    #   '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
    #   '"http_referer": "$http_referer", ' # HTTP referer
    #   '"http_user_agent": "$http_user_agent", ' # user agent
    #   '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
    #   '"http_host": "$http_host", ' # the request Host: header
    #   '"server_name": "$server_name", ' # the name of the vhost serving the request
    #   '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
    #   '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
    #   '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
    #   '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
    #   '"upstream_response_time": "$upstream_response_time", ' # time spend receiving upstream body
    #   '"upstream_response_length": "$upstream_response_length", ' # upstream response length
    #   '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
    #   '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
    #   '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
    #   '"scheme": "$scheme", ' # http or https
    #   '"request_method": "$request_method", ' # request method
    #   '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
    #   '"pipe": "$pipe", ' # “p” if request was pipelined, “.” otherwise
    #   '"gzip_ratio": "$gzip_ratio", '
    #   '"request_body": "$request_body", '
    #   '"http_cf_ray": "$http_cf_ray"'
    #     '}';
    log_format main_json escape=json '{' '"msec": "$msec", ' '"connection": "$connection", ' '"connection_requests": "$connection_requests", ' '"pid": "$pid", ' '"request_id": "$request_id", ' '"request_length": "$request_length", ' '"remote_addr": "$remote_addr", ' '"remote_user": "$remote_user", ' '"remote_port": "$remote_port", ' '"time_local": "$time_local", ' '"time_iso8601": "$time_iso8601", ' '"request": "$request", ' '"request_uri": "$request_uri", ' '"args": "$args", ' '"status": "$status", ' '"body_bytes_sent": "$body_bytes_sent", ' '"bytes_sent": "$bytes_sent", ' '"http_referer": "$http_referer", ' '"http_user_agent": "$http_user_agent", ' '"http_x_forwarded_for": "$http_x_forwarded_for", ' '"http_host": "$http_host", ' '"server_name": "$server_name", ' '"request_time": "$request_time", ' '"upstream": "$upstream_addr", ' '"upstream_connect_time": "$upstream_connect_time", ' '"upstream_header_time": "$upstream_header_time", ' '"upstream_response_time": "$upstream_response_time", ' '"upstream_response_length": "$upstream_response_length", ' '"upstream_cache_status": "$upstream_cache_status", ' '"ssl_protocol": "$ssl_protocol", ' '"ssl_cipher": "$ssl_cipher", ' '"scheme": "$scheme", ' '"request_method": "$request_method", ' '"server_protocol": "$server_protocol", ' '"pipe": "$pipe", ' '"gzip_ratio": "$gzip_ratio", ' '"request_body": "$request_body", ' '"http_cf_ray": "$http_cf_ray"' '}';
    vhost_traffic_status_zone;
    vhost_traffic_status_dump _SITE_ROOT_/data/vts_gateway.db;
    include _SITE_ROOT_/http.d/massbit/massbitroute/node/*/*/*.conf;
    include _SITE_ROOT_/http.d/massbit/massbitroute/node/*.conf;
    include _SITE_ROOT_/http.d/*/*/*.conf;
    include _SITE_ROOT_/conf.d/*/*/*.conf;
}
